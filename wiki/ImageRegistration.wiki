#Summary of Elastix Image registration

= Introduction =

VRAK has currently been developed using Elastix to perform sequential rigid and deformable registration. In my experience the registration results are good and most importantly free from artefacts. From a workflow perspective, Elastix is very convenient because it allows warping of SPECT/PET volumes based on CT registration such that the output images are all written with the same voxel dimensions and origin location; thus avoiding the need to do any further resampling before turning the images into data arrays. Registered images are written in ITK format [http://www.itk.org/Wiki/ITK/File_Formats mhd+raw]. You may prefer to use another registration package (plastimatch or ITK itself, for example) as long as the output is .mhd/.raw files in the same array space.

 


= Details =

Elastix is called from the command line with arguments of fixed & moving image paths and the location of a text file containing the registration parameters (Type, optimisation, metric, resolution, output filetype, etc).

{{{
elastix -f fixed_image.dcm -m moving_image.dcm -out output_folder/ -p parameter_file.txt
}}}

Transformix, used for warping functional images, is called similarly:

{{{
transformix -in moving_functional_image.dcm -tp deformation_map.txt -out output_folder/
}}}

From the command line, this can all be scripted. The process for doing deformable registration with two CT images and resampling the corresponding functional (PET/SPECT) images is:
 # Null Deformation of fixed CT
 # Resample fixed SPECT to CT dimensions
 # Rigid registration of moving CT to fixed CT
 # Deformable registration of moving CT to fixed CT
 # Warp moving SPECT to fixed CT

For example a script to do this in unix might be:

{{{
#create output folder
mkdir CT1

#run elastix with 0 iterations to create a null deformation map (for resampling SPECT1 to correct dimensions)
elastix -f CT1.dcm -m CT1.dcm -out CT1/ -p null_deform.txt

#create output folder for resampled SPECT1
mkdir SPECT1

#resample SPECT with CT1 (fixed volume) dimensions
transformix -in SPECT1.dcm -tp CT1/TransformParameters.0.txt -out SPECT1/




#rigid registration CT2
mkdir CT2rigid
elastix -f CT1.dcm -m CT2.dcm -out CT2rigid/ -p rigid_param.txt

#deformable registration CT2
mkdir CT2
#call deformable registration routine with using initial rigid registration (t0). Note: rigid registration is automatically written into deformation map
elastix -f CT1.dcm -m CT2.dcm -out CT2/ -p def_param.txt -t0 CT2rigid/TransformParameters.0.txt

#Warp SPECT #2 to fixed CT (CT1)
mkdir SPECT2
transformix -in SPECT2.dcm -tp CT2/TransformParameters.0.txt -out SPECT2/

}}}

Note: sample parameter files null_deform.txt, rigid_param.txt, & def_param.txt are contained in the downloads section

output will be written to CT1/result.mhd, CT1/result.raw, etc. 
If renaming, be sure to change the 'ElementDataFile' flag in the metafile:
{{{
ElementDataFile = newname.raw
}}}